{"id":"../node_modules/graphql/utilities/index.mjs","dependencies":[{"name":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/package.json","includedInParent":true,"mtime":1620734970427},{"name":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/package.json","includedInParent":true,"mtime":1620734970788},{"name":"./introspectionQuery","loc":{"line":11,"column":26},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/introspectionQuery.mjs"},{"name":"./getOperationAST","loc":{"line":13,"column":32},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/getOperationAST.mjs"},{"name":"./getOperationRootType","loc":{"line":15,"column":37},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/getOperationRootType.mjs"},{"name":"./introspectionFromSchema","loc":{"line":17,"column":40},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/introspectionFromSchema.mjs"},{"name":"./buildClientSchema","loc":{"line":19,"column":34},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/buildClientSchema.mjs"},{"name":"./buildASTSchema","loc":{"line":23,"column":22},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/buildASTSchema.mjs"},{"name":"./extendSchema","loc":{"line":25,"column":29},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/extendSchema.mjs"},{"name":"./lexicographicSortSchema","loc":{"line":27,"column":40},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/lexicographicSortSchema.mjs"},{"name":"./schemaPrinter","loc":{"line":29,"column":65},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/schemaPrinter.mjs"},{"name":"./typeFromAST","loc":{"line":31,"column":28},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/typeFromAST.mjs"},{"name":"./valueFromAST","loc":{"line":33,"column":29},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/valueFromAST.mjs"},{"name":"./valueFromASTUntyped","loc":{"line":35,"column":36},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/valueFromASTUntyped.mjs"},{"name":"./astFromValue","loc":{"line":37,"column":29},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/astFromValue.mjs"},{"name":"./TypeInfo","loc":{"line":40,"column":25},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/TypeInfo.mjs"},{"name":"./coerceValue","loc":{"line":42,"column":28},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/coerceValue.mjs"},{"name":"./isValidJSValue","loc":{"line":44,"column":31},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/isValidJSValue.mjs"},{"name":"./isValidLiteralValue","loc":{"line":46,"column":36},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/isValidLiteralValue.mjs"},{"name":"./concatAST","loc":{"line":48,"column":26},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/concatAST.mjs"},{"name":"./separateOperations","loc":{"line":50,"column":35},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/separateOperations.mjs"},{"name":"./typeComparators","loc":{"line":52,"column":61},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/typeComparators.mjs"},{"name":"./assertValidName","loc":{"line":54,"column":50},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/assertValidName.mjs"},{"name":"./findBreakingChanges","loc":{"line":56,"column":99},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/findBreakingChanges.mjs"},{"name":"./findDeprecatedUsages","loc":{"line":58,"column":37},"parent":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/index.mjs","resolved":"/Users/tatooine/Documents/dev/udemy/graphqle-course/apollo-client/node_modules/graphql/utilities/findDeprecatedUsages.mjs"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _introspectionQuery = require('./introspectionQuery');\n\nObject.defineProperty(exports, 'getIntrospectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _introspectionQuery.getIntrospectionQuery;\n  }\n});\nObject.defineProperty(exports, 'introspectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _introspectionQuery.introspectionQuery;\n  }\n});\n\nvar _getOperationAST = require('./getOperationAST');\n\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function () {\n    return _getOperationAST.getOperationAST;\n  }\n});\n\nvar _getOperationRootType = require('./getOperationRootType');\n\nObject.defineProperty(exports, 'getOperationRootType', {\n  enumerable: true,\n  get: function () {\n    return _getOperationRootType.getOperationRootType;\n  }\n});\n\nvar _introspectionFromSchema = require('./introspectionFromSchema');\n\nObject.defineProperty(exports, 'introspectionFromSchema', {\n  enumerable: true,\n  get: function () {\n    return _introspectionFromSchema.introspectionFromSchema;\n  }\n});\n\nvar _buildClientSchema = require('./buildClientSchema');\n\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildClientSchema.buildClientSchema;\n  }\n});\n\nvar _buildASTSchema = require('./buildASTSchema');\n\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildASTSchema;\n  }\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildSchema;\n  }\n});\nObject.defineProperty(exports, 'getDescription', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.getDescription;\n  }\n});\n\nvar _extendSchema = require('./extendSchema');\n\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function () {\n    return _extendSchema.extendSchema;\n  }\n});\n\nvar _lexicographicSortSchema = require('./lexicographicSortSchema');\n\nObject.defineProperty(exports, 'lexicographicSortSchema', {\n  enumerable: true,\n  get: function () {\n    return _lexicographicSortSchema.lexicographicSortSchema;\n  }\n});\n\nvar _schemaPrinter = require('./schemaPrinter');\n\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function () {\n    return _schemaPrinter.printSchema;\n  }\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function () {\n    return _schemaPrinter.printType;\n  }\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function () {\n    return _schemaPrinter.printIntrospectionSchema;\n  }\n});\n\nvar _typeFromAST = require('./typeFromAST');\n\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function () {\n    return _typeFromAST.typeFromAST;\n  }\n});\n\nvar _valueFromAST = require('./valueFromAST');\n\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function () {\n    return _valueFromAST.valueFromAST;\n  }\n});\n\nvar _valueFromASTUntyped = require('./valueFromASTUntyped');\n\nObject.defineProperty(exports, 'valueFromASTUntyped', {\n  enumerable: true,\n  get: function () {\n    return _valueFromASTUntyped.valueFromASTUntyped;\n  }\n});\n\nvar _astFromValue = require('./astFromValue');\n\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function () {\n    return _astFromValue.astFromValue;\n  }\n});\n\nvar _TypeInfo = require('./TypeInfo');\n\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.TypeInfo;\n  }\n});\n\nvar _coerceValue = require('./coerceValue');\n\nObject.defineProperty(exports, 'coerceValue', {\n  enumerable: true,\n  get: function () {\n    return _coerceValue.coerceValue;\n  }\n});\n\nvar _isValidJSValue = require('./isValidJSValue');\n\nObject.defineProperty(exports, 'isValidJSValue', {\n  enumerable: true,\n  get: function () {\n    return _isValidJSValue.isValidJSValue;\n  }\n});\n\nvar _isValidLiteralValue = require('./isValidLiteralValue');\n\nObject.defineProperty(exports, 'isValidLiteralValue', {\n  enumerable: true,\n  get: function () {\n    return _isValidLiteralValue.isValidLiteralValue;\n  }\n});\n\nvar _concatAST = require('./concatAST');\n\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function () {\n    return _concatAST.concatAST;\n  }\n});\n\nvar _separateOperations = require('./separateOperations');\n\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function () {\n    return _separateOperations.separateOperations;\n  }\n});\n\nvar _typeComparators = require('./typeComparators');\n\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isEqualType;\n  }\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isTypeSubTypeOf;\n  }\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.doTypesOverlap;\n  }\n});\n\nvar _assertValidName = require('./assertValidName');\n\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.assertValidName;\n  }\n});\nObject.defineProperty(exports, 'isValidNameError', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.isValidNameError;\n  }\n});\n\nvar _findBreakingChanges = require('./findBreakingChanges');\n\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.BreakingChangeType;\n  }\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.DangerousChangeType;\n  }\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findBreakingChanges;\n  }\n});\nObject.defineProperty(exports, 'findDangerousChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findDangerousChanges;\n  }\n});\n\nvar _findDeprecatedUsages = require('./findDeprecatedUsages');\n\nObject.defineProperty(exports, 'findDeprecatedUsages', {\n  enumerable: true,\n  get: function () {\n    return _findDeprecatedUsages.findDeprecatedUsages;\n  }\n});","map":{"mappings":[{"name":"getIntrospectionQuery","generated":{"line":12,"column":31},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":10,"column":9}},{"name":"introspectionQuery","generated":{"line":18,"column":31},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":11,"column":0}},{"name":"getOperationAST","generated":{"line":27,"column":28},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":13,"column":9}},{"name":"getOperationRootType","generated":{"line":36,"column":33},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":15,"column":9}},{"name":"introspectionFromSchema","generated":{"line":45,"column":36},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":17,"column":9}},{"name":"buildClientSchema","generated":{"line":54,"column":30},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":19,"column":9}},{"name":"buildASTSchema","generated":{"line":63,"column":27},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":21,"column":9}},{"name":"buildSchema","generated":{"line":69,"column":27},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":21,"column":25}},{"name":"getDescription","generated":{"line":75,"column":27},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":23,"column":0}},{"name":"extendSchema","generated":{"line":84,"column":25},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":25,"column":9}},{"name":"lexicographicSortSchema","generated":{"line":93,"column":36},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":27,"column":9}},{"name":"printSchema","generated":{"line":102,"column":26},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":29,"column":9}},{"name":"printType","generated":{"line":108,"column":26},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":29,"column":22}},{"name":"printIntrospectionSchema","generated":{"line":114,"column":26},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":29,"column":33}},{"name":"typeFromAST","generated":{"line":123,"column":24},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":31,"column":9}},{"name":"valueFromAST","generated":{"line":132,"column":25},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":33,"column":9}},{"name":"valueFromASTUntyped","generated":{"line":141,"column":32},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":35,"column":9}},{"name":"astFromValue","generated":{"line":150,"column":25},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":37,"column":9}},{"name":"TypeInfo","generated":{"line":159,"column":21},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":40,"column":9}},{"name":"coerceValue","generated":{"line":168,"column":24},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":42,"column":9}},{"name":"isValidJSValue","generated":{"line":177,"column":27},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":44,"column":9}},{"name":"isValidLiteralValue","generated":{"line":186,"column":32},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":46,"column":9}},{"name":"concatAST","generated":{"line":195,"column":22},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":48,"column":9}},{"name":"separateOperations","generated":{"line":204,"column":31},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":50,"column":9}},{"name":"isEqualType","generated":{"line":213,"column":28},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":52,"column":9}},{"name":"isTypeSubTypeOf","generated":{"line":219,"column":28},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":52,"column":22}},{"name":"doTypesOverlap","generated":{"line":225,"column":28},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":52,"column":39}},{"name":"assertValidName","generated":{"line":234,"column":28},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":54,"column":9}},{"name":"isValidNameError","generated":{"line":240,"column":28},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":54,"column":26}},{"name":"BreakingChangeType","generated":{"line":249,"column":32},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":56,"column":9}},{"name":"DangerousChangeType","generated":{"line":255,"column":32},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":56,"column":29}},{"name":"findBreakingChanges","generated":{"line":261,"column":32},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":56,"column":50}},{"name":"findDangerousChanges","generated":{"line":267,"column":32},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":56,"column":71}},{"name":"findDeprecatedUsages","generated":{"line":276,"column":33},"source":"../node_modules/graphql/utilities/index.mjs","original":{"line":58,"column":9}}],"sources":{"../node_modules/graphql/utilities/index.mjs":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n// The GraphQL query recommended for a full schema introspection.\nexport { getIntrospectionQuery, // @deprecated, use getIntrospectionQuery() - will be removed in v15\nintrospectionQuery } from './introspectionQuery';\n// Gets the target Operation from a Document\nexport { getOperationAST } from './getOperationAST'; // Gets the Type for the target Operation AST.\n\nexport { getOperationRootType } from './getOperationRootType'; // Convert a GraphQLSchema to an IntrospectionQuery\n\nexport { introspectionFromSchema } from './introspectionFromSchema'; // Build a GraphQLSchema from an introspection result.\n\nexport { buildClientSchema } from './buildClientSchema'; // Build a GraphQLSchema from GraphQL Schema language.\n\nexport { buildASTSchema, buildSchema, // @deprecated: Get the description from a schema AST node and supports legacy\n// syntax for specifying descriptions - will be removed in v16\ngetDescription } from './buildASTSchema';\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema } from './extendSchema'; // Sort a GraphQLSchema.\n\nexport { lexicographicSortSchema } from './lexicographicSortSchema'; // Print a GraphQLSchema to GraphQL Schema language.\n\nexport { printSchema, printType, printIntrospectionSchema } from './schemaPrinter'; // Create a GraphQLType from a GraphQL language AST.\n\nexport { typeFromAST } from './typeFromAST'; // Create a JavaScript value from a GraphQL language AST with a type.\n\nexport { valueFromAST } from './valueFromAST'; // Create a JavaScript value from a GraphQL language AST without a type.\n\nexport { valueFromASTUntyped } from './valueFromASTUntyped'; // Create a GraphQL language AST from a JavaScript value.\n\nexport { astFromValue } from './astFromValue'; // A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\n\nexport { TypeInfo } from './TypeInfo'; // Coerces a JavaScript value to a GraphQL type, or produces errors.\n\nexport { coerceValue } from './coerceValue'; // @deprecated use coerceValue - will be removed in v15\n\nexport { isValidJSValue } from './isValidJSValue'; // @deprecated use validation - will be removed in v15\n\nexport { isValidLiteralValue } from './isValidLiteralValue'; // Concatenates multiple AST together.\n\nexport { concatAST } from './concatAST'; // Separates an AST into an AST per Operation.\n\nexport { separateOperations } from './separateOperations'; // Comparators for types\n\nexport { isEqualType, isTypeSubTypeOf, doTypesOverlap } from './typeComparators'; // Asserts that a string is a valid GraphQL name\n\nexport { assertValidName, isValidNameError } from './assertValidName'; // Compares two GraphQLSchemas and detects breaking changes.\n\nexport { BreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges } from './findBreakingChanges';\n// Report all deprecated usage within a GraphQL document.\nexport { findDeprecatedUsages } from './findDeprecatedUsages';"},"lineCount":null}},"hash":"af5b9f061ea1680bc4fb50c89f8830bc","cacheData":{"env":{}}}